@using Microsoft.AspNetCore.Identity
@using cuahangbanle.Components.Services
@using cuahangbanle.Data
@implements IDisposable

@inject NavigationManager NavigationManager
@inject IUserProfileService userProfileService
@inject IUserService userService
@inject UserManager<ApplicationUser> _userManager
@inject AuthenticationStateProvider auth

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
    <MudNavLink Href="/Admin/UserManage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.People">Quản lý người dùng</MudNavLink>
    <MudNavLink Href="/Admin/RoleManage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.SettingsAccessibility">Quản lý quyền</MudNavLink>
    <MudNavLink Href="/Mathang/Danhsachmathang" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ViewList">Danh sách mặt hàng</MudNavLink>
    <MudNavLink Href="auth" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Lock">Yêu cầu đăng nhập</MudNavLink>
    <MudNavLink Href="AdminRequired" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Lock">Yêu cầu quyền Admin</MudNavLink>
    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="Account/Manage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">@userName</MudNavLink>
            <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="mud-nav-link mud-ripple">
                    <MudIcon Icon="@Icons.Material.Filled.Logout" Color="Color.Info" Class="mr-3"></MudIcon> Đăng xuất
                </button>
            </form>
        </Authorized>
        <NotAuthorized>
            <MudNavLink Href="Account/Register" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">Đăng ký</MudNavLink>
            <MudNavLink Href="Account/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Password">Đăng nhập</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>


@code {
    private string? currentUrl;
    string userName = "";

    protected override async Task OnInitializedAsync()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        userName = await GetUserName();
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    public async Task<string> GetUserName()
    {
        var authState = await auth.GetAuthenticationStateAsync();
        var userPrincipal = authState.User;
        var UserID = userPrincipal.FindFirst(c => c.Type.Contains("nameidentifier"))?.Value;
        var profile = await userProfileService.GetUserProfileById(UserID ?? "");
        return profile?.Hoten ?? "";
    }
}
}


