@page "/DonViTinh/Danhsachdonvitinh/{id}"

@using cuahangbanle.Components.Services
@using cuahangbanle.DBData.Models
@using cuahangbanle.Data.Models

@inject NavigationManager Navigation
@inject IDonvitinhService donvitinhService
@inject AuthenticationStateProvider auth
@inject ISnackbar Snackbar

<PageTitle>Chi tiết đơn vị tính</PageTitle>

<MudGrid Justify="Justify.Center" Style="margin-top: 3vh">
    <MudItem xs="12" sm="10" md="6">
        <MudPaper Class="p-4">
            <MudGrid Spacing="1">
                <MudItem xs="12">
                    <MudTextField ReadOnly="true" Label="Mã đơn vị tính" HelperText="Mã đơn vị tính được tạo tự động và không thể sửa" @bind-Value="@donvi.Madonvitinh" />
                </MudItem>
                <MudItem xs="12" Class="mb-3">
                    <MudTextField T="string" Label="Đơn vị lẻ" HelperText="Điền tên đơn vị tính" @bind-Value="@donvi.Donvile" />
                </MudItem>
                <MudItem xs="12" Class="mb-3">
                    <MudTextField T="string" Label="Đơn vị lớn" HelperText="Điền tên đơn vị tính" @bind-Value="@donvi.Donvilon" />
                </MudItem>
                <MudItem xs="6">
                    <MudButton FullWidth Variant="Variant.Filled" Color="Color.Error" OnClick="@Cancel">Huỷ và quay lại</MudButton>
                </MudItem>
                <MudItem xs="6">
                    <MudButton FullWidth Variant="Variant.Filled" Color="Color.Primary" OnClick="@Save">Lưu</MudButton>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    [Parameter]
    public string? id { get; set; }
    public Donvitinh donvi = new();
    bool isNew = false;

    protected override async Task OnInitializedAsync()
    {
        donvi = await donvitinhService.GetDonvitinhById(id ?? "");
        if (donvi.Madonvitinh == "")
        {
            isNew = true;
            donvi.Madonvitinh = id ?? Guid.NewGuid().ToString();
        }
    }

    public void Cancel()
    {
        Navigation.NavigateTo("/DonViTinh/Danhsachdonvitinh");
    }

    public bool checkNameNull()
    {
        if (string.IsNullOrEmpty(donvi.Donvile) || string.IsNullOrEmpty(donvi.Donvilon))
        {
            Snackbar.Add("Đơn vị tính không được để trống", Severity.Error);
            return true;
        }
        return false;
    }

    public async Task Save()
    {
        var authState = await auth.GetAuthenticationStateAsync();
        var principal = authState.User;
        var userId = principal.FindFirst(p => p.Type.Contains("nameidentifier"))?.Value ?? "";
        if (checkNameNull())
        {
            return;
        }
        if (isNew)
        {
            donvi.Nguoitao = userId;
            donvi.Ngaytao = DateTime.Now;
            await donvitinhService.CreateDonvitinh(donvi);
        }
        else
        {
            donvi.Nguoisua = userId;
            donvi.Ngaysua = DateTime.Now;
            await donvitinhService.CreateDonvitinh(donvi);
        }
        Navigation.NavigateTo("/DonViTinh/Danhsachdonvitinh");
    }
}



